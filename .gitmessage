<tag>(<module>): <subject> (Max 72 char, lowercase, no period at end)
# Example:
# feat(core): Implement automated commit messages

# (Optional)
# Commit message should describe motivation. Think about your code
# reviewers and what information they need in order to understand what
# you did. If it's a big commit (hopefully not), try to provide some
# good entry points so it will be easier to follow.
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|

# (Optional)
# If not obvious (i.e. from unit tests), describe how you verified that
# your change works.
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|

# (Optional)
# BREAKING CHANGE: <what broke and how to achieve this behavior now>
# * **<module-name>:** <Another breaking change>
# * **<module-name>:** <Yet another breaking change>
#
# If this commit includes breaking changes, they must be listed at the
# end in the following format (markdown format):
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|

# --- COMMIT END ---
# Tag can be 
#    feat     (new feature)
#    fix      (bug fix)
#    refactor (refactoring code)
#    chore (updating grunt tasks etc; no production code change)
